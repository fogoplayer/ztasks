* {
  overflow: hidden;
  text-overflow: ellipsis;
}

.task .material-icons {
  font-size: inherit;
}

.task-preview {
  /* display */
  display: flex;
  flex-flow: row nowrap;
  column-gap: 0.5em;
  align-items: center;

  /* box-model */
  padding: 0.5em;
}

.task-preview > * {
  flex: 0 0 auto;
}

.task-preview .task-drag-handle {
  width: 2em;
}

.task-preview .task-check {
  margin: 0;
  font-size: 1em;
  padding-inline: 0.5em;
}

.task-preview .task-name {
  /* display */
  flex: 1 1 10ch;

  /* box-model */
  background: transparent;
  border: none;
  border-bottom: 2px solid currentColor;

  /* typography */
  font-size: inherit;
  font-family: inherit;
  color: inherit;
  text-overflow: ellipsis;
  overflow-x: hidden;
}

.task-preview .task-name:focus {
  background: var(--background-focus);
  outline: 0.25em solid var(--background-focus);
  border-bottom: 2px solid hsl(var(--accent-hue), 100%, var(--accent-lightness));
  border-radius: 0.05em;
}

.task-preview .details-link {
  text-decoration: none;
  color: inherit;
  display: flex;
  align-items: center;
}

.task-preview .chip {
  display: none;
  height: 1.5em;
}

.task-preview .chip * {
  display: none;
  background: transparent;
  border: none;
  width: max-content;
}

.task-preview .chip .material-icons {
  font-size: 0.75em;
}

.task.has-due-date > .task-preview > .details-link > .task-data,
.task.has-description > .task-preview > .details-link > .task-data {
  /* display */
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  column-gap: 0.25em;

  /* box-model */
  background: var(--accent-color);
  border-radius: 1em;
  padding: 0.25em 0.5em;

  /* typography */
  color: var(--text-accent);
}

.task.task.has-due-date.has-reminder
  > .task-preview
  > .details-link
  > .task-data
  .notif-indicator {
  display: inline-block;
}

.task.task.has-due-date
  > .task-preview
  > .details-link
  > .task-data
  .task-due-date {
  display: inline-block;
  font-family: inherit; /* TODO is this required? */
  font-size: 0.75em;
}

.task.has-due-date.is-recurring
  > .task-preview
  > .details-link
  > .task-data
  .recurring-indicator {
  display: inline-block;
}

.task.has-description
  > .task-preview
  > .details-link
  > .task-data
  .description-indicator {
  display: inline-block;
}

.task > .task-preview button {
  display: inline-block;
  background: transparent;
  border: none;
  padding: 0;
  color: inherit;
  font-size: inherit;
}

.task.has-description .task-preview .task-more,
.task.task.has-due-date .task-preview .task-more {
  display: none;
}

.task > .task-preview > .subtasks-toggle {
  transition: transform var(--anim-time) linear;
}

.task > .task-preview > .subtasks-toggle.hide {
  transform: scaleY(-1);
}

.task .subtasks {
  padding-left: 2em;
}
